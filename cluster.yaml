---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Amazon EKS Cluster'

Parameters:
  ClusterName:
    Type: String
    Default: my-eks-cluster
  NumberOfWorkerNodes:
    Type: Number
    Default: 3
  WorkerNodesInstanceType:
    Type: List<String>
    Default: m5.4xlarge,m5.8xlarge,m5.12xlarge
  KubernetesVersion:
    Type: String
    Default: 1.26
  CapacityType:
    Type: String
    Default: SPOT
    
Resources:

  ###########################################
  ## Roles
  ###########################################
  EksRole:
    Type: AWS::IAM::Role
    Properties: 
      RoleName: my.eks.cluster.role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - eks.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
  EksNodeRole:
    Type: AWS::IAM::Role
    Properties: 
      RoleName: my.eks.node.role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
        - "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
        - "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"

  ###########################################
  ## Eks Cluster
  ###########################################

  EksCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: !Ref ClusterName
      Version: !Ref KubernetesVersion
      RoleArn: !GetAtt EksRole.Arn
      ResourcesVpcConfig:
        SecurityGroupIds:
          - !ImportValue ControlPlaneSecurityGroupId
        SubnetIds: !Split [ ',', !ImportValue PrivateSubnetIds ]

  EksNodegroup:
    Type: AWS::EKS::Nodegroup
    DependsOn: EksCluster
    Properties:
      ClusterName: !Ref ClusterName
      NodeRole: !GetAtt EksNodeRole.Arn
      InstanceTypes: !Ref WorkerNodesInstanceType
      CapacityType: !Ref CapacityType
      ScalingConfig:
        MinSize:
          Ref: NumberOfWorkerNodes
        DesiredSize:
          Ref: NumberOfWorkerNodes
        MaxSize:
          Ref: NumberOfWorkerNodes
      Subnets: !Split [ ',', !ImportValue PrivateSubnetIds ]

  EksAddonsVPC:
    Type: AWS::EKS::Addon
    DependsOn: EksCluster
    Properties:
      AddonName: vpc-cni
      ClusterName: !Ref ClusterName
      ResolveConflicts: OVERWRITE
  EksAddonsCoreDNS:
    Type: AWS::EKS::Addon
    DependsOn: EksCluster
    Properties:
      AddonName: coredns
      ClusterName: !Ref ClusterName
      ResolveConflicts: OVERWRITE
  EksAddonsKubeProxy:
    Type: AWS::EKS::Addon
    DependsOn: EksCluster
    Properties:
      AddonName: kube-proxy
      ClusterName: !Ref ClusterName
      ResolveConflicts: OVERWRITE
